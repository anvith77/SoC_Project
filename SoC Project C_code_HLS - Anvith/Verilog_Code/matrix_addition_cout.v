// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrix_addition_cout,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.543000,HLS_SYN_LAT=425,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=7,HLS_SYN_FF=1144,HLS_SYN_LUT=722}" *)

module matrix_addition_cout (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        CO3_address0,
        CO3_ce0,
        CO3_q0,
        CO4_address0,
        CO4_ce0,
        CO4_q0,
        COUT_address0,
        COUT_ce0,
        COUT_we0,
        COUT_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 17'b1;
parameter    ap_ST_st2_fsm_1 = 17'b10;
parameter    ap_ST_st3_fsm_2 = 17'b100;
parameter    ap_ST_st4_fsm_3 = 17'b1000;
parameter    ap_ST_st5_fsm_4 = 17'b10000;
parameter    ap_ST_st6_fsm_5 = 17'b100000;
parameter    ap_ST_st7_fsm_6 = 17'b1000000;
parameter    ap_ST_st8_fsm_7 = 17'b10000000;
parameter    ap_ST_st9_fsm_8 = 17'b100000000;
parameter    ap_ST_st10_fsm_9 = 17'b1000000000;
parameter    ap_ST_st11_fsm_10 = 17'b10000000000;
parameter    ap_ST_st12_fsm_11 = 17'b100000000000;
parameter    ap_ST_st13_fsm_12 = 17'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 17'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 17'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 17'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 17'b10000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] CO3_address0;
output   CO3_ce0;
input  [31:0] CO3_q0;
output  [3:0] CO4_address0;
output   CO4_ce0;
input  [31:0] CO4_q0;
output  [3:0] COUT_address0;
output   COUT_ce0;
output   COUT_we0;
output  [31:0] COUT_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg CO3_ce0;
reg CO4_ce0;
reg COUT_ce0;
reg COUT_we0;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm = 17'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_33;
wire   [1:0] r_1_fu_217_p2;
reg   [1:0] r_1_reg_419;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_66;
wire  signed [5:0] p_addr4_cast_fu_245_p1;
reg  signed [5:0] p_addr4_cast_reg_424;
wire   [0:0] exitcond5_fu_211_p2;
wire   [1:0] c_1_fu_255_p2;
reg   [1:0] c_1_reg_432;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_81;
wire   [63:0] tmp_3_fu_274_p1;
reg   [63:0] tmp_3_reg_437;
wire   [0:0] exitcond4_fu_249_p2;
wire   [1:0] r_2_fu_285_p2;
reg   [1:0] r_2_reg_450;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_97;
wire  signed [5:0] p_addr_cast_fu_313_p1;
reg  signed [5:0] p_addr_cast_reg_455;
wire   [0:0] exitcond3_fu_279_p2;
wire   [1:0] c_2_fu_323_p2;
reg   [1:0] c_2_reg_463;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_111;
wire   [63:0] tmp_7_fu_342_p1;
reg   [63:0] tmp_7_reg_468;
wire   [0:0] exitcond2_fu_317_p2;
wire   [1:0] r_3_fu_353_p2;
reg   [1:0] r_3_reg_481;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_127;
wire  signed [5:0] p_addr6_cast_fu_381_p1;
reg  signed [5:0] p_addr6_cast_reg_486;
wire   [0:0] exitcond1_fu_347_p2;
wire   [1:0] c_3_fu_391_p2;
reg   [1:0] c_3_reg_494;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_141;
wire   [63:0] tmp_8_fu_410_p1;
reg   [63:0] tmp_8_reg_499;
wire   [0:0] exitcond_fu_385_p2;
wire   [31:0] co4_i_q0;
reg   [31:0] co4_i_load_reg_514;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_159;
wire   [31:0] co3_i_q0;
reg   [31:0] co3_i_load_reg_519;
wire   [31:0] grp_fu_207_p2;
reg   [31:0] tmp_2_reg_524;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_170;
reg   [3:0] co3_i_address0;
reg    co3_i_ce0;
reg    co3_i_we0;
wire   [31:0] co3_i_d0;
reg   [3:0] co4_i_address0;
reg    co4_i_ce0;
reg    co4_i_we0;
wire   [31:0] co4_i_d0;
wire   [3:0] C_assign_address0;
reg    C_assign_ce0;
reg    C_assign_we0;
wire   [31:0] C_assign_d0;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_done;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_idle;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_ready;
wire   [3:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_address0;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_ce0;
wire   [31:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_q0;
wire   [3:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_address0;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_ce0;
wire   [31:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_q0;
wire   [3:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_address0;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_ce0;
wire    grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_we0;
wire   [31:0] grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_d0;
reg   [1:0] r_reg_134;
reg   [1:0] c_reg_145;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_229;
reg   [1:0] r1_reg_156;
reg   [1:0] c2_reg_167;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_244;
reg   [1:0] r3_reg_178;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_253;
reg   [1:0] c4_reg_189;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_267;
reg    grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg = 1'b0;
wire   [31:0] grp_fu_207_p0;
wire   [31:0] grp_fu_207_p1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_288;
wire   [3:0] tmp_fu_227_p3;
wire   [4:0] p_shl_cast_fu_235_p1;
wire   [4:0] tmp_trn1_cast_fu_223_p1;
wire   [4:0] p_addr4_fu_239_p2;
wire   [5:0] tmp_3_trn2_cast_fu_261_p1;
wire  signed [5:0] p_addr5_fu_265_p2;
wire  signed [31:0] p_addr5_cast_fu_270_p1;
wire   [3:0] tmp_1_fu_295_p3;
wire   [4:0] p_shl1_cast_fu_303_p1;
wire   [4:0] tmp_1_trn6_cast_fu_291_p1;
wire   [4:0] p_addr_fu_307_p2;
wire   [5:0] tmp_7_trn7_cast_fu_329_p1;
wire  signed [5:0] p_addr1_fu_333_p2;
wire  signed [31:0] p_addr1_cast_fu_338_p1;
wire   [3:0] tmp_5_fu_363_p3;
wire   [4:0] p_shl2_cast_fu_371_p1;
wire   [4:0] tmp_5_trn4_cast_fu_359_p1;
wire   [4:0] p_addr6_fu_375_p2;
wire   [5:0] tmp_trn5_cast_fu_397_p1;
wire  signed [5:0] p_addr7_fu_401_p2;
wire  signed [31:0] p_addr7_cast_fu_406_p1;
wire    grp_fu_207_ce;
reg   [16:0] ap_NS_fsm;


matrix_addition_cout_co3_i #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
co3_i_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( co3_i_address0 ),
    .ce0( co3_i_ce0 ),
    .we0( co3_i_we0 ),
    .d0( co3_i_d0 ),
    .q0( co3_i_q0 )
);

matrix_addition_cout_co3_i #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
co4_i_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( co4_i_address0 ),
    .ce0( co4_i_ce0 ),
    .we0( co4_i_we0 ),
    .d0( co4_i_d0 ),
    .q0( co4_i_q0 )
);

matrix_addition_cout_C_assign #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
C_assign_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( C_assign_address0 ),
    .ce0( C_assign_ce0 ),
    .we0( C_assign_we0 ),
    .d0( C_assign_d0 )
);

matrix_addition_cout_matrix_multiply_default grp_matrix_addition_cout_matrix_multiply_default_fu_200(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start ),
    .ap_done( grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_done ),
    .ap_idle( grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_idle ),
    .ap_ready( grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_ready ),
    .A_address0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_address0 ),
    .A_ce0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_ce0 ),
    .A_q0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_q0 ),
    .B_address0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_address0 ),
    .B_ce0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_ce0 ),
    .B_q0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_q0 ),
    .C_address0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_address0 ),
    .C_ce0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_ce0 ),
    .C_we0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_we0 ),
    .C_d0( grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_d0 )
);

matrix_addition_cout_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
matrix_addition_cout_fadd_32ns_32ns_32_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_207_p0 ),
    .din1( grp_fu_207_p1 ),
    .ce( grp_fu_207_ce ),
    .dout( grp_fu_207_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond3_fu_279_p2))) begin
            grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_ready)) begin
            grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        c2_reg_167 <= c_2_reg_463;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_279_p2))) begin
        c2_reg_167 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        c4_reg_189 <= c_3_reg_494;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & (ap_const_lv1_0 == exitcond1_fu_347_p2))) begin
        c4_reg_189 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_reg_145 <= c_1_reg_432;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_211_p2 == ap_const_lv1_0))) begin
        c_reg_145 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond5_fu_211_p2 == ap_const_lv1_0))) begin
        r1_reg_156 <= ap_const_lv2_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_317_p2))) begin
        r1_reg_156 <= r_2_reg_450;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == exitcond_fu_385_p2))) begin
        r3_reg_178 <= r_3_reg_481;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_logic_0 == grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_done))) begin
        r3_reg_178 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond4_fu_249_p2))) begin
        r_reg_134 <= r_1_reg_419;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        r_reg_134 <= ap_const_lv2_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_1_reg_432 <= c_1_fu_255_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_2_reg_463 <= c_2_fu_323_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        c_3_reg_494 <= c_3_fu_391_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        co3_i_load_reg_519 <= co3_i_q0;
        co4_i_load_reg_514 <= co4_i_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond5_fu_211_p2 == ap_const_lv1_0))) begin
        p_addr4_cast_reg_424 <= p_addr4_cast_fu_245_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & (ap_const_lv1_0 == exitcond1_fu_347_p2))) begin
        p_addr6_cast_reg_486 <= p_addr6_cast_fu_381_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_279_p2))) begin
        p_addr_cast_reg_455 <= p_addr_cast_fu_313_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        r_1_reg_419 <= r_1_fu_217_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        r_2_reg_450 <= r_2_fu_285_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        r_3_reg_481 <= r_3_fu_353_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_2_reg_524 <= grp_fu_207_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond4_fu_249_p2))) begin
        tmp_3_reg_437[31 : 0] <= tmp_3_fu_274_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_317_p2))) begin
        tmp_7_reg_468[31 : 0] <= tmp_7_fu_342_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == exitcond_fu_385_p2))) begin
        tmp_8_reg_499[31 : 0] <= tmp_8_fu_410_p1[31 : 0];
    end
end

/// CO3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        CO3_ce0 = ap_const_logic_1;
    end else begin
        CO3_ce0 = ap_const_logic_0;
    end
end

/// CO4_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        CO4_ce0 = ap_const_logic_1;
    end else begin
        CO4_ce0 = ap_const_logic_0;
    end
end

/// COUT_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        COUT_ce0 = ap_const_logic_1;
    end else begin
        COUT_ce0 = ap_const_logic_0;
    end
end

/// COUT_we0 assign process. ///
always @ (ap_sig_cseq_ST_st17_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        COUT_we0 = ap_const_logic_1;
    end else begin
        COUT_we0 = ap_const_logic_0;
    end
end

/// C_assign_ce0 assign process. ///
always @ (grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_ce0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C_assign_ce0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_ce0;
    end else begin
        C_assign_ce0 = ap_const_logic_0;
    end
end

/// C_assign_we0 assign process. ///
always @ (grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_we0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C_assign_we0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_we0;
    end else begin
        C_assign_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or exitcond1_fu_347_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond1_fu_347_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_8 or exitcond1_fu_347_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) & ~(ap_const_lv1_0 == exitcond1_fu_347_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_141)
begin
    if (ap_sig_bdd_141) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_159)
begin
    if (ap_sig_bdd_159) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_288)
begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_170)
begin
    if (ap_sig_bdd_170) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_267)
begin
    if (ap_sig_bdd_267) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_33)
begin
    if (ap_sig_bdd_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_66)
begin
    if (ap_sig_bdd_66) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_81)
begin
    if (ap_sig_bdd_81) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_229)
begin
    if (ap_sig_bdd_229) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_97)
begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_111)
begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_244)
begin
    if (ap_sig_bdd_244) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_253)
begin
    if (ap_sig_bdd_253) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_127)
begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// co3_i_address0 assign process. ///
always @ (tmp_3_reg_437 or ap_sig_cseq_ST_st10_fsm_9 or tmp_8_fu_410_p1 or grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        co3_i_address0 = tmp_3_reg_437;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        co3_i_address0 = tmp_8_fu_410_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        co3_i_address0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_address0;
    end else begin
        co3_i_address0 = 'bx;
    end
end

/// co3_i_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        co3_i_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        co3_i_ce0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_ce0;
    end else begin
        co3_i_ce0 = ap_const_logic_0;
    end
end

/// co3_i_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        co3_i_we0 = ap_const_logic_1;
    end else begin
        co3_i_we0 = ap_const_logic_0;
    end
end

/// co4_i_address0 assign process. ///
always @ (tmp_7_reg_468 or ap_sig_cseq_ST_st10_fsm_9 or tmp_8_fu_410_p1 or grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_address0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        co4_i_address0 = tmp_7_reg_468;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        co4_i_address0 = tmp_8_fu_410_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        co4_i_address0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_address0;
    end else begin
        co4_i_address0 = 'bx;
    end
end

/// co4_i_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_ce0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        co4_i_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        co4_i_ce0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_ce0;
    end else begin
        co4_i_ce0 = ap_const_logic_0;
    end
end

/// co4_i_we0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        co4_i_we0 = ap_const_logic_1;
    end else begin
        co4_i_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond5_fu_211_p2 or exitcond4_fu_249_p2 or exitcond3_fu_279_p2 or exitcond2_fu_317_p2 or exitcond1_fu_347_p2 or exitcond_fu_385_p2 or grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond5_fu_211_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond4_fu_249_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_279_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_317_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(ap_const_logic_0 == grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_done)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_347_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st10_fsm_9 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_385_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CO3_address0 = tmp_3_fu_274_p1;
assign CO4_address0 = tmp_7_fu_342_p1;
assign COUT_address0 = tmp_8_reg_499;
assign COUT_d0 = tmp_2_reg_524;
assign C_assign_address0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_address0;
assign C_assign_d0 = grp_matrix_addition_cout_matrix_multiply_default_fu_200_C_d0;

/// ap_sig_bdd_111 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_127 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_141 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_141 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_159 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_159 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_170 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_170 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_229 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_229 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_244 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_244 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_253 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_253 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_267 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_267 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_288 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_33 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_33 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_66 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_66 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_81 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_81 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_97 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end
assign c_1_fu_255_p2 = (c_reg_145 + ap_const_lv2_1);
assign c_2_fu_323_p2 = (c2_reg_167 + ap_const_lv2_1);
assign c_3_fu_391_p2 = (c4_reg_189 + ap_const_lv2_1);
assign co3_i_d0 = CO3_q0;
assign co4_i_d0 = CO4_q0;
assign exitcond1_fu_347_p2 = (r3_reg_178 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond2_fu_317_p2 = (c2_reg_167 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond3_fu_279_p2 = (r1_reg_156 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond4_fu_249_p2 = (c_reg_145 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond5_fu_211_p2 = (r_reg_134 == ap_const_lv2_3? 1'b1: 1'b0);
assign exitcond_fu_385_p2 = (c4_reg_189 == ap_const_lv2_3? 1'b1: 1'b0);
assign grp_fu_207_ce = ap_const_logic_1;
assign grp_fu_207_p0 = co4_i_load_reg_514;
assign grp_fu_207_p1 = co3_i_load_reg_519;
assign grp_matrix_addition_cout_matrix_multiply_default_fu_200_A_q0 = co3_i_q0;
assign grp_matrix_addition_cout_matrix_multiply_default_fu_200_B_q0 = co4_i_q0;
assign grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start = grp_matrix_addition_cout_matrix_multiply_default_fu_200_ap_start_ap_start_reg;
assign p_addr1_cast_fu_338_p1 = p_addr1_fu_333_p2;
assign p_addr1_fu_333_p2 = ($signed(tmp_7_trn7_cast_fu_329_p1) + $signed(p_addr_cast_reg_455));
assign p_addr4_cast_fu_245_p1 = $signed(p_addr4_fu_239_p2);
assign p_addr4_fu_239_p2 = (p_shl_cast_fu_235_p1 - tmp_trn1_cast_fu_223_p1);
assign p_addr5_cast_fu_270_p1 = p_addr5_fu_265_p2;
assign p_addr5_fu_265_p2 = ($signed(tmp_3_trn2_cast_fu_261_p1) + $signed(p_addr4_cast_reg_424));
assign p_addr6_cast_fu_381_p1 = $signed(p_addr6_fu_375_p2);
assign p_addr6_fu_375_p2 = (p_shl2_cast_fu_371_p1 - tmp_5_trn4_cast_fu_359_p1);
assign p_addr7_cast_fu_406_p1 = p_addr7_fu_401_p2;
assign p_addr7_fu_401_p2 = ($signed(tmp_trn5_cast_fu_397_p1) + $signed(p_addr6_cast_reg_486));
assign p_addr_cast_fu_313_p1 = $signed(p_addr_fu_307_p2);
assign p_addr_fu_307_p2 = (p_shl1_cast_fu_303_p1 - tmp_1_trn6_cast_fu_291_p1);
assign p_shl1_cast_fu_303_p1 = tmp_1_fu_295_p3;
assign p_shl2_cast_fu_371_p1 = tmp_5_fu_363_p3;
assign p_shl_cast_fu_235_p1 = tmp_fu_227_p3;
assign r_1_fu_217_p2 = (r_reg_134 + ap_const_lv2_1);
assign r_2_fu_285_p2 = (r1_reg_156 + ap_const_lv2_1);
assign r_3_fu_353_p2 = (r3_reg_178 + ap_const_lv2_1);
assign tmp_1_fu_295_p3 = {{r1_reg_156}, {ap_const_lv2_0}};
assign tmp_1_trn6_cast_fu_291_p1 = r1_reg_156;
assign tmp_3_fu_274_p1 = $unsigned(p_addr5_cast_fu_270_p1);
assign tmp_3_trn2_cast_fu_261_p1 = c_reg_145;
assign tmp_5_fu_363_p3 = {{r3_reg_178}, {ap_const_lv2_0}};
assign tmp_5_trn4_cast_fu_359_p1 = r3_reg_178;
assign tmp_7_fu_342_p1 = $unsigned(p_addr1_cast_fu_338_p1);
assign tmp_7_trn7_cast_fu_329_p1 = c2_reg_167;
assign tmp_8_fu_410_p1 = $unsigned(p_addr7_cast_fu_406_p1);
assign tmp_fu_227_p3 = {{r_reg_134}, {ap_const_lv2_0}};
assign tmp_trn1_cast_fu_223_p1 = r_reg_134;
assign tmp_trn5_cast_fu_397_p1 = c4_reg_189;
always @ (posedge ap_clk)
begin
    tmp_3_reg_437[63:32] <= 32'b00000000000000000000000000000000;
    tmp_7_reg_468[63:32] <= 32'b00000000000000000000000000000000;
    tmp_8_reg_499[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //matrix_addition_cout

